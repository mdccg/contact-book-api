{
	"info": {
		"_postman_id": "70635467-88eb-4bb7-8426-3770baadaaa4",
		"name": "Context Book API Requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25754970"
	},
	"item": [
		{
			"name": "Save a new contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('it should save a new valid contact', () => {\r",
							"    pm.response.to.have.status(201);\r",
							"    const response = pm.response.json();\r",
							"    const { contact } = response;\r",
							"    pm.expect(contact._id).not.null();\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Matheus D. C. C. Gomes\",\r\n    \"email\": \"matheus.gomes@estudante.ifms.edu.br\",\r\n    \"phone\": \"(67) 94002-8922\",\r\n    \"birthday\": \"2001-11-27\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/contacts",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Save a new contact with invalid name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('it should not save a contact with invalid name', () => {\r",
							"    pm.response.to.have.status(400);\r",
							"    const response = pm.response.json();\r",
							"    const { errorMessages: { 0: errorMessage } } = response;\r",
							"    pm.expect(errorMessage).to.equal('Name cannot be empty');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"\",\r\n    \"email\": \"matheus.gomes@estudante.ifms.edu.br\",\r\n    \"phone\": \"(67) 94002-8922\",\r\n    \"birthday\": \"2001-11-27\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/contacts",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Save a new contact with invalid email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('it should not save a contact with invalid email', () => {\r",
							"    pm.response.to.have.status(400);\r",
							"    const response = pm.response.json();\r",
							"    const { errorMessages: { 0: errorMessage } } = response;\r",
							"    pm.expect(errorMessage).to.equal('Invalid email');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Matheus D. C. C. Gomes\",\r\n    \"email\": \"\",\r\n    \"phone\": \"(67) 94002-8922\",\r\n    \"birthday\": \"2001-11-27\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/contacts",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Save a new contact with invalid phone",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('it should not save a contact with invalid phone', () => {\r",
							"    pm.response.to.have.status(400);\r",
							"    const response = pm.response.json();\r",
							"    const { errorMessages: { 0: errorMessage } } = response;\r",
							"    pm.expect(errorMessage).to.equal('Phone must have the following pattern: (99) 99999-9999');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Matheus D. C. C. Gomes\",\r\n    \"email\": \"matheus.gomes@estudante.ifms.edu.br\",\r\n    \"phone\": \"(67)4002-8922\",\r\n    \"birthday\": \"2001-11-27\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/contacts",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Save a new contact with invalid birthday",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('it should not save a contact with invalid birthday', () => {\r",
							"    pm.response.to.have.status(400);\r",
							"    const response = pm.response.json();\r",
							"    const { errorMessages: { 0: errorMessage } } = response;\r",
							"    pm.expect(errorMessage).to.equal('Birthday must be previous to today');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Matheus D. C. C. Gomes\",\r\n    \"email\": \"matheus.gomes@estudante.ifms.edu.br\",\r\n    \"phone\": \"(67) 94002-8922\",\r\n    \"birthday\": \"2026-11-27\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/contacts",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Filter contacts",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/contacts",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get contacts with specific name",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/contacts/name/:name",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"contacts",
						"name",
						":name"
					],
					"variable": [
						{
							"key": "name",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get contacts within birthday period",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/contacts/birthday/period",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"contacts",
						"birthday",
						"period"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:3001",
			"type": "string"
		}
	]
}